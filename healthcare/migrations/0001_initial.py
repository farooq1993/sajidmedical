# Generated by Django 4.2.9 on 2025-02-04 07:12

import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppointmentMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_type', models.CharField(default=None, max_length=300, null=True)),
                ('appointment_code', models.CharField(default=None, max_length=300, null=True)),
                ('other_symptoms', models.TextField(null=True)),
                ('date', models.DateField(null=True)),
                ('time_slot_from', models.TimeField(null=True)),
                ('time_slot_to', models.TimeField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('created_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_dt', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'appointment_master',
            },
        ),
        migrations.CreateModel(
            name='MedicineMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine_name', models.CharField(default=None, max_length=300, null=True)),
                ('medicine_type', models.CharField(default=None, max_length=300, null=True)),
                ('cost_of_medicine', models.DecimalField(blank=True, decimal_places=2, max_digits=50, null=True)),
                ('purpose', models.CharField(default=None, max_length=300, null=True)),
                ('medicine_desc', models.TextField(null=True)),
                ('manufacturer', models.CharField(default=None, max_length=130, null=True)),
                ('acronym', models.CharField(max_length=500, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_dt', models.DateTimeField(auto_now=True, null=True)),
                ('strength', models.CharField(default=None, max_length=128, null=True)),
                ('drug', models.CharField(default=None, max_length=200, null=True)),
            ],
            options={
                'db_table': 'medicine_master',
            },
        ),
        migrations.CreateModel(
            name='OTPGenerator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp_number', models.IntegerField()),
                ('expired_at', models.DateTimeField(null=True)),
                ('mobile_number', models.CharField(max_length=15, null=True)),
                ('email_id', models.CharField(max_length=500, null=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'otp_generator',
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine_recomended_from_outside', models.CharField(default=None, max_length=300, null=True)),
                ('next_consult', models.CharField(default=None, max_length=300, null=True)),
                ('advoice_list', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=300), blank=True, null=True, size=None)),
                ('symptom_details', models.TextField(null=True)),
                ('pdf_path', models.CharField(default=None, max_length=500, null=True)),
                ('visiting_fees', models.CharField(default=None, max_length=128, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_dt', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'prescription',
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type_name', models.CharField(default=None, max_length=130, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_dt', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'user_type',
            },
        ),
        migrations.CreateModel(
            name='UserMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(default=None, max_length=130, null=True)),
                ('first_name', models.CharField(default=None, max_length=130, null=True)),
                ('last_name', models.CharField(default=None, max_length=130, null=True)),
                ('full_name', models.CharField(default=None, max_length=130, null=True)),
                ('mobile_number', models.CharField(default=None, max_length=15, null=True)),
                ('user_type', models.CharField(blank=True, choices=[('doctor', 'Doctor'), ('patient', 'Patient')], max_length=10, null=True)),
                ('address_1', models.CharField(default=None, max_length=200, null=True)),
                ('address_2', models.CharField(default=None, max_length=200, null=True)),
                ('city', models.CharField(default=None, max_length=200, null=True)),
                ('state', models.CharField(default=None, max_length=200, null=True)),
                ('pincode', models.CharField(default=None, max_length=20, null=True)),
                ('age', models.IntegerField(null=True)),
                ('dob', models.DateField(null=True)),
                ('country', models.CharField(default=None, max_length=200, null=True)),
                ('gender', models.CharField(default=None, max_length=200, null=True)),
                ('qualification', models.CharField(default=None, max_length=200, null=True)),
                ('experience', models.CharField(default=None, max_length=200, null=True)),
                ('currently_working_at', models.CharField(default=None, max_length=200, null=True)),
                ('speciality', models.CharField(default=None, max_length=300, null=True)),
                ('occupation', models.CharField(default=None, max_length=300, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('email_id', models.CharField(max_length=500, null=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_dt', models.DateTimeField(auto_now=True, null=True)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_master_doctor', to='healthcare.usermaster')),
                ('verified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_by_admin_user', to='healthcare.usermaster')),
            ],
            options={
                'db_table': 'user_master',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_name', models.CharField(default=None, max_length=130, null=True)),
                ('first_name', models.CharField(default=None, max_length=130, null=True)),
                ('last_name', models.CharField(default=None, max_length=130, null=True)),
                ('full_name', models.CharField(default=None, max_length=130, null=True)),
                ('mobile_number', models.CharField(default=None, max_length=15, null=True)),
                ('user_type', models.CharField(blank=True, choices=[('doctor', 'Doctor'), ('patient', 'Patient')], max_length=10, null=True)),
                ('address_1', models.CharField(default=None, max_length=200, null=True)),
                ('address_2', models.CharField(default=None, max_length=200, null=True)),
                ('city', models.CharField(default=None, max_length=200, null=True)),
                ('state', models.CharField(default=None, max_length=200, null=True)),
                ('pincode', models.CharField(default=None, max_length=20, null=True)),
                ('age', models.IntegerField(null=True)),
                ('dob', models.DateField(null=True)),
                ('country', models.CharField(default=None, max_length=200, null=True)),
                ('gender', models.CharField(default=None, max_length=200, null=True)),
                ('qualification', models.CharField(default=None, max_length=200, null=True)),
                ('experience', models.CharField(default=None, max_length=200, null=True)),
                ('currently_working_at', models.CharField(default=None, max_length=200, null=True)),
                ('speciality', models.CharField(default=None, max_length=300, null=True)),
                ('occupation', models.CharField(default=None, max_length=300, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('email_id', models.CharField(max_length=500, null=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_dt', models.DateTimeField(auto_now=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='healthcare_user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='healthcare_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.CharField(max_length=25)),
                ('razorpay_order_id', models.CharField(blank=True, max_length=200, null=True)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=200, null=True)),
                ('razorpay_signature', models.CharField(blank=True, max_length=500, null=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('payment_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_dt', models.DateTimeField(auto_now=True, null=True)),
                ('appointment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointment_payment', to='healthcare.appointmentmaster')),
            ],
            options={
                'db_table': 'transaction_master',
            },
        ),
        migrations.CreateModel(
            name='TestMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('body_part', models.CharField(blank=True, max_length=128, null=True)),
                ('test_type', models.CharField(blank=True, max_length=128, null=True)),
                ('desc', models.TextField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_dt', models.DateTimeField(auto_now=True, null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_added_by', to='healthcare.usermaster')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_updated_by', to='healthcare.usermaster')),
                ('verified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_verified', to='healthcare.usermaster')),
            ],
            options={
                'db_table': 'test_master',
            },
        ),
        migrations.CreateModel(
            name='SymptomMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_part_name', models.CharField(blank=True, max_length=300, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_dt', models.DateTimeField(auto_now=True, null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='symptoms_added_by', to='healthcare.usermaster')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='symptoms_updated_by', to='healthcare.usermaster')),
            ],
            options={
                'db_table': 'symptom_master',
            },
        ),
        migrations.CreateModel(
            name='SymptomDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_dt', models.DateTimeField(auto_now=True, null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='symptoms_details_added_by', to='healthcare.usermaster')),
                ('symptoms', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='symptoms_master_details', to='healthcare.symptommaster')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='symptoms_details_updated_by', to='healthcare.usermaster')),
            ],
            options={
                'db_table': 'symptom_details',
            },
        ),
        migrations.CreateModel(
            name='PrescriptionTestDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('details', models.TextField(blank=True, default=None, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_dt', models.DateTimeField(auto_now=True, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='add_presc_test_details', to='healthcare.usermaster')),
                ('prescription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='precription_test_level', to='healthcare.prescription')),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='precription_test', to='healthcare.testmaster')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_presc_test_details', to='healthcare.usermaster')),
            ],
            options={
                'db_table': 'prescription_test_details',
            },
        ),
        migrations.CreateModel(
            name='PrescriptionMedicineDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regime', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('tenure', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('instruction', models.CharField(blank=True, default=None, max_length=300, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_dt', models.DateTimeField(auto_now=True, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='add_pres_medcn_details', to='healthcare.usermaster')),
                ('medicine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='precription_medicine', to='healthcare.medicinemaster')),
                ('prescription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='precription_medicine_level', to='healthcare.prescription')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_pres_medcn_details', to='healthcare.usermaster')),
            ],
            options={
                'db_table': 'prescription_medicine_details',
            },
        ),
        migrations.AddField(
            model_name='prescription',
            name='added_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_prescription', to='healthcare.usermaster'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='doctor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prescription_doctor', to='healthcare.usermaster'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='medicine_recomended_from_inside',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='medicine_recomended', to='healthcare.medicinemaster'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prescription_patient', to='healthcare.usermaster'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_prescription', to='healthcare.usermaster'),
        ),
        migrations.CreateModel(
            name='PatientFamilyDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default=None, max_length=130, null=True)),
                ('last_name', models.CharField(default=None, max_length=130, null=True)),
                ('full_name', models.CharField(default=None, max_length=130, null=True)),
                ('mobile_number', models.CharField(default=None, max_length=15, null=True)),
                ('address_1', models.CharField(default=None, max_length=200, null=True)),
                ('address_2', models.CharField(default=None, max_length=200, null=True)),
                ('city', models.CharField(default=None, max_length=200, null=True)),
                ('state', models.CharField(default=None, max_length=200, null=True)),
                ('pincode', models.CharField(default=None, max_length=20, null=True)),
                ('age', models.IntegerField(null=True)),
                ('dob', models.DateField(null=True)),
                ('country', models.CharField(default=None, max_length=200, null=True)),
                ('gender', models.CharField(default=None, max_length=200, null=True)),
                ('qualification', models.CharField(default=None, max_length=200, null=True)),
                ('occupation', models.CharField(default=None, max_length=300, null=True)),
                ('email_id', models.CharField(max_length=500, null=True)),
                ('medical_history', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_dt', models.DateTimeField(auto_now=True, null=True)),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_family', to='healthcare.usermaster')),
            ],
            options={
                'db_table': 'patient_family_member',
            },
        ),
        migrations.CreateModel(
            name='PasswordMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=600)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_password', to='healthcare.user')),
                ('user_master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_master_password', to='healthcare.usermaster')),
            ],
            options={
                'db_table': 'password_master',
            },
        ),
        migrations.AddField(
            model_name='medicinemaster',
            name='added_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='medicine_added_by', to='healthcare.usermaster'),
        ),
        migrations.AddField(
            model_name='medicinemaster',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='medicine_updated_by', to='healthcare.usermaster'),
        ),
        migrations.AddField(
            model_name='medicinemaster',
            name='verified_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='medicine_verified', to='healthcare.usermaster'),
        ),
        migrations.CreateModel(
            name='CronScriptLock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cron_script_name', models.CharField(max_length=128)),
                ('is_one_time_cron', models.BooleanField(default=False)),
                ('one_time_cron_status', models.CharField(max_length=128)),
                ('one_time_cron_started_dt', models.DateTimeField(default=django.utils.timezone.now)),
                ('one_time_cron_ended_dt', models.DateTimeField(default=django.utils.timezone.now)),
                ('regular_cron_status', models.CharField(max_length=128)),
                ('regular_cron_started_dt', models.DateTimeField(default=django.utils.timezone.now)),
                ('regular_cron_ended_dt', models.DateTimeField(default=django.utils.timezone.now)),
                ('flag_date', models.DateTimeField(null=True)),
                ('data_from_date', models.DateTimeField(null=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True)),
                ('updated_dt', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cronscriptlock_created_by_user', to='healthcare.usermaster')),
            ],
            options={
                'db_table': 'cron_script_lock',
            },
        ),
        migrations.AddField(
            model_name='appointmentmaster',
            name='added_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointment_added_by', to='healthcare.usermaster'),
        ),
        migrations.AddField(
            model_name='appointmentmaster',
            name='doctor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_appointment', to='healthcare.usermaster'),
        ),
        migrations.AddField(
            model_name='appointmentmaster',
            name='patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_appointment', to='healthcare.usermaster'),
        ),
        migrations.AddField(
            model_name='appointmentmaster',
            name='patient_family',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_fmaily_appointment', to='healthcare.usermaster'),
        ),
        migrations.AddField(
            model_name='appointmentmaster',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointment_updated_by', to='healthcare.usermaster'),
        ),
        migrations.CreateModel(
            name='AppointmentDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_dt', models.DateTimeField(auto_now=True, null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointment_detail_added_by', to='healthcare.usermaster')),
                ('appointment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointment_details', to='healthcare.appointmentmaster')),
                ('symptom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='symptom_master', to='healthcare.symptomdetails')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointment_detail_updated_by', to='healthcare.usermaster')),
            ],
            options={
                'db_table': 'appointment_details',
            },
        ),
    ]
